// Generated by CoffeeScript 1.8.0
(function() {
  var Controller, root,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Controller = (function() {
    function Controller(sandboxSelector) {
      this.sandboxSelector = sandboxSelector;
      this.checkSandbox = __bind(this.checkSandbox, this);
      this.ready = false;
      this.msgTable = {};
      this.sandbox = $(this.sandboxSelector).get(0);
    }

    Controller.prototype.register = function() {
      window.addEventListener("message", (function(_this) {
        return function(ev) {
          var id, result, state;
          id = ev.data.id;
          result = ev.data.result;
          state = ev.data.state;
          if (_this.msgTable.hasOwnProperty(id)) {
            if (state === 0) {
              _this.msgTable[id](result);
            } else {
              console.log("error #" + state + ": " + result);
            }
            return delete _this.msgTable[id];
          }
        };
      })(this));
      return this.checkSandbox();
    };

    Controller.prototype.checkSandbox = function() {
      if (!this.ready) {
        this.mandate('ok?', null, (function(_this) {
          return function(result) {
            return _this.ready = true;
          };
        })(this));
        return setTimeout(this.checkSandbox, 100);
      }
    };

    Controller.prototype.s4 = function() {
      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
    };

    Controller.prototype.mandate = function(cmd, context, callback) {
      var id;
      id = this.s4();
      this.msgTable[id] = callback;
      return this.postMessage(id, cmd, context);
    };

    Controller.prototype.postMessage = function(id, cmd, context) {
      var msg;
      msg = {
        id: id,
        cmd: cmd,
        context: context
      };
      if (this.sandbox.contentWindow) {
        return this.sandbox.contentWindow.postMessage(msg, "*");
      }
    };

    return Controller;

  })();

  root = typeof exports !== "undefined" && exports !== null ? exports : self;

  root.SandBoxCtrl = Controller;

}).call(this);
